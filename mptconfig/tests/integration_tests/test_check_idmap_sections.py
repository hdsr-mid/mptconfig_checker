from mptconfig.checker import MptConfigChecker
from mptconfig.excel import ExcelSheet
from mptconfig.excel import ExcelSheetTypeChoices
from mptconfig.tests.fixtures import patched_path_constants_1
from mptconfig.tests.fixtures import patched_path_constants_2
from mptconfig.utils import equal_dataframes

import pandas as pd  # noqa pandas comes with geopandas


# silence flake8 errors
_patched_path_constants_1 = patched_path_constants_1
_patched_path_constants_2 = patched_path_constants_2

expected_df_1 = pd.DataFrame(
    {
        "bestand": {
            0: "IdOPVLWATER_HYMOS",
            1: "IdOPVLWATER_HYMOS",
            2: "IdOPVLWATER_HYMOS",
            3: "IdOPVLWATER_HYMOS",
            4: "IdOPVLWATER_HYMOS",
            5: "IdOPVLWATER_HYMOS",
            6: "IdOPVLWATER_HYMOS",
            7: "IdOPVLWATER_HYMOS",
            8: "IdOPVLWATER_HYMOS",
            9: "IdOPVLWATER_HYMOS",
            10: "IdOPVLWATER_HYMOS",
            11: "IdOPVLWATER_HYMOS",
            12: "IdOPVLWATER_HYMOS",
            13: "IdOPVLWATER_HYMOS",
            14: "IdOPVLWATER_HYMOS",
            15: "IdOPVLWATER_HYMOS",
            16: "IdOPVLWATER_HYMOS",
            17: "IdOPVLWATER_HYMOS",
            18: "IdOPVLWATER_HYMOS",
            19: "IdOPVLWATER_HYMOS",
            20: "IdOPVLWATER_HYMOS",
            21: "IdOPVLWATER_HYMOS",
            22: "IdOPVLWATER_HYMOS",
            23: "IdOPVLWATER_HYMOS",
            24: "IdOPVLWATER_HYMOS",
            25: "IdOPVLWATER_HYMOS",
            26: "IdOPVLWATER_HYMOS",
            27: "IdOPVLWATER_HYMOS",
            28: "IdOPVLWATER_HYMOS",
            29: "IdOPVLWATER_HYMOS",
            30: "IdOPVLWATER_HYMOS",
            31: "IdOPVLWATER_HYMOS",
            32: "IdOPVLWATER_HYMOS",
            33: "IdOPVLWATER_HYMOS",
            34: "IdOPVLWATER",
            35: "IdOPVLWATER",
        },
        "externalLocation": {
            0: "013",
            1: "021",
            2: "023",
            3: "027",
            4: "037",
            5: "037",
            6: "037",
            7: "037",
            8: "042",
            9: "042",
            10: "042",
            11: "042",
            12: "103",
            13: "114",
            14: "126",
            15: "130",
            16: "130",
            17: "130",
            18: "133",
            19: "140",
            20: "141",
            21: "226",
            22: "237",
            23: "237",
            24: "237",
            25: "311",
            26: "322",
            27: "351",
            28: "354",
            29: "354",
            30: "354",
            31: "354",
            32: "122",
            33: "124",
            34: "4803",
            35: "4322",
        },
        "externalParameter": {
            0: "NSC",
            1: "NSC",
            2: "NSC",
            3: "NSC",
            4: "EGV",
            5: "TMP",
            6: "O2",
            7: "ZWS",
            8: "EGV",
            9: "O2",
            10: "TMP",
            11: "ZWS",
            12: "NSC",
            13: "NSC",
            14: "NSC",
            15: "O2",
            16: "EGV",
            17: "TMP",
            18: "TMP",
            19: "EGV",
            20: "TMP",
            21: "NSC",
            22: "EGV",
            23: "TMP",
            24: "O2",
            25: "EGV",
            26: "NSC",
            27: "NSC",
            28: "EGV",
            29: "O2",
            30: "TMP",
            31: "ZWS",
            32: "HO2",
            33: "HO2",
            34: "ES1",
            35: "ES2",
        },
        "internalLocation": {
            0: "NS6013",
            1: "NS6021",
            2: "NS6023",
            3: "NS6027",
            4: "WQ103710",
            5: "WQ103710",
            6: "WQ103710",
            7: "WQ103710",
            8: "WQ104210",
            9: "WQ104210",
            10: "WQ104210",
            11: "WQ104210",
            12: "NS6103",
            13: "NS6114",
            14: "NS6126",
            15: "WQ213010",
            16: "WQ213010",
            17: "WQ213010",
            18: "WQ213310",
            19: "WQ214010",
            20: "WQ214110",
            21: "NS6226",
            22: "WQ323710",
            23: "WQ323710",
            24: "WQ323710",
            25: "WQ431110",
            26: "NS6322",
            27: "NS6351",
            28: "WQ435410",
            29: "WQ435410",
            30: "WQ435410",
            31: "WQ435410",
            32: "KW212214",
            33: "KW212411",
            34: "KW4315xx",
            35: "KW4322xx",
        },
        "internalParameter": {
            0: "Rh.15",
            1: "Rh.15",
            2: "Rh.15",
            3: "Rh.15",
            4: "C.15",
            5: "T.15",
            6: "O2ppm.15",
            7: "OPAQ.15",
            8: "C.15",
            9: "O2ppm.15",
            10: "T.15",
            11: "OPAQ.15",
            12: "Rh.15",
            13: "Rh.15",
            14: "Rh.15",
            15: "O2ppm.15",
            16: "C.15",
            17: "T.15",
            18: "T.15",
            19: "C.15",
            20: "T.15",
            21: "Rh.15",
            22: "C.15",
            23: "T.15",
            24: "O2ppm.15",
            25: "C.15",
            26: "Rh.15",
            27: "Rh.15",
            28: "C.15",
            29: "O2ppm.15",
            30: "T.15",
            31: "OPAQ.15",
            32: "H.G.15",
            33: "H.G.15",
            34: "ES.0",
            35: "ES.0",
        },
        "sectie": {
            0: "",
            1: "",
            2: "",
            3: "",
            4: "",
            5: "",
            6: "",
            7: "",
            8: "",
            9: "",
            10: "",
            11: "",
            12: "",
            13: "",
            14: "",
            15: "",
            16: "",
            17: "",
            18: "",
            19: "",
            20: "",
            21: "",
            22: "",
            23: "",
            24: "",
            25: "",
            26: "",
            27: "",
            28: "",
            29: "",
            30: "",
            31: "",
            32: "<!--WATERSTANDSLOCATIES-->",
            33: "<!--WATERSTANDSLOCATIES-->",
            34: "<!--KUNSTWERK SUBLOCS (new CAW id)-->",
            35: "<!--KUNSTWERK SUBLOCS (new CAW id)-->",
        },
    }
)
expected_df_2 = pd.DataFrame(
    {
        "bestand": {
            0: "IdOPVLWATER_HYMOS",
            1: "IdOPVLWATER_HYMOS",
            2: "IdOPVLWATER_HYMOS",
            3: "IdOPVLWATER_HYMOS",
            4: "IdOPVLWATER_HYMOS",
            5: "IdOPVLWATER_HYMOS",
            6: "IdOPVLWATER_HYMOS",
            7: "IdOPVLWATER_HYMOS",
            8: "IdOPVLWATER_HYMOS",
            9: "IdOPVLWATER_HYMOS",
            10: "IdOPVLWATER_HYMOS",
            11: "IdOPVLWATER_HYMOS",
            12: "IdOPVLWATER_HYMOS",
            13: "IdOPVLWATER_HYMOS",
            14: "IdOPVLWATER_HYMOS",
            15: "IdOPVLWATER_HYMOS",
            16: "IdOPVLWATER_HYMOS",
            17: "IdOPVLWATER_HYMOS",
            18: "IdOPVLWATER_HYMOS",
            19: "IdOPVLWATER_HYMOS",
            20: "IdOPVLWATER_HYMOS",
            21: "IdOPVLWATER_HYMOS",
            22: "IdOPVLWATER_HYMOS",
            23: "IdOPVLWATER_HYMOS",
            24: "IdOPVLWATER_HYMOS",
            25: "IdOPVLWATER_HYMOS",
            26: "IdOPVLWATER_HYMOS",
            27: "IdOPVLWATER_HYMOS",
            28: "IdOPVLWATER_HYMOS",
            29: "IdOPVLWATER_HYMOS",
            30: "IdOPVLWATER_HYMOS",
            31: "IdOPVLWATER_HYMOS",
            32: "IdOPVLWATER_HYMOS",
            33: "IdOPVLWATER_HYMOS",
        },
        "externalLocation": {
            0: "013",
            1: "021",
            2: "023",
            3: "027",
            4: "037",
            5: "037",
            6: "037",
            7: "037",
            8: "042",
            9: "042",
            10: "042",
            11: "042",
            12: "103",
            13: "114",
            14: "126",
            15: "130",
            16: "130",
            17: "130",
            18: "133",
            19: "140",
            20: "141",
            21: "226",
            22: "237",
            23: "237",
            24: "237",
            25: "311",
            26: "322",
            27: "351",
            28: "354",
            29: "354",
            30: "354",
            31: "354",
            32: "122",
            33: "124",
        },
        "externalParameter": {
            0: "NSC",
            1: "NSC",
            2: "NSC",
            3: "NSC",
            4: "EGV",
            5: "TMP",
            6: "O2",
            7: "ZWS",
            8: "EGV",
            9: "O2",
            10: "TMP",
            11: "ZWS",
            12: "NSC",
            13: "NSC",
            14: "NSC",
            15: "O2",
            16: "EGV",
            17: "TMP",
            18: "TMP",
            19: "EGV",
            20: "TMP",
            21: "NSC",
            22: "EGV",
            23: "TMP",
            24: "O2",
            25: "EGV",
            26: "NSC",
            27: "NSC",
            28: "EGV",
            29: "O2",
            30: "TMP",
            31: "ZWS",
            32: "HO2",
            33: "HO2",
        },
        "internalLocation": {
            0: "NS6013",
            1: "NS6021",
            2: "NS6023",
            3: "NS6027",
            4: "WQ103710",
            5: "WQ103710",
            6: "WQ103710",
            7: "WQ103710",
            8: "WQ104210",
            9: "WQ104210",
            10: "WQ104210",
            11: "WQ104210",
            12: "NS6103",
            13: "NS6114",
            14: "NS6126",
            15: "WQ213010",
            16: "WQ213010",
            17: "WQ213010",
            18: "WQ213310",
            19: "WQ214010",
            20: "WQ214110",
            21: "NS6226",
            22: "WQ323710",
            23: "WQ323710",
            24: "WQ323710",
            25: "WQ431110",
            26: "NS6322",
            27: "NS6351",
            28: "WQ435410",
            29: "WQ435410",
            30: "WQ435410",
            31: "WQ435410",
            32: "KW212214",
            33: "KW212411",
        },
        "internalParameter": {
            0: "Rh.15",
            1: "Rh.15",
            2: "Rh.15",
            3: "Rh.15",
            4: "C.15",
            5: "T.15",
            6: "O2ppm.15",
            7: "OPAQ.15",
            8: "C.15",
            9: "O2ppm.15",
            10: "T.15",
            11: "OPAQ.15",
            12: "Rh.15",
            13: "Rh.15",
            14: "Rh.15",
            15: "O2ppm.15",
            16: "C.15",
            17: "T.15",
            18: "T.15",
            19: "C.15",
            20: "T.15",
            21: "Rh.15",
            22: "C.15",
            23: "T.15",
            24: "O2ppm.15",
            25: "C.15",
            26: "Rh.15",
            27: "Rh.15",
            28: "C.15",
            29: "O2ppm.15",
            30: "T.15",
            31: "OPAQ.15",
            32: "H.G.15",
            33: "H.G.15",
        },
        "sectie": {
            0: "",
            1: "",
            2: "",
            3: "",
            4: "",
            5: "",
            6: "",
            7: "",
            8: "",
            9: "",
            10: "",
            11: "",
            12: "",
            13: "",
            14: "",
            15: "",
            16: "",
            17: "",
            18: "",
            19: "",
            20: "",
            21: "",
            22: "",
            23: "",
            24: "",
            25: "",
            26: "",
            27: "",
            28: "",
            29: "",
            30: "",
            31: "",
            32: "<!--WATERSTANDSLOCATIES-->",
            33: "<!--WATERSTANDSLOCATIES-->",
        },
    }
)


def test_check_idmap_sections_1(patched_path_constants_1):
    meetpunt_config = MptConfigChecker()
    excelsheet = meetpunt_config.check_idmap_sections(sheet_name="blabla")
    assert isinstance(excelsheet, ExcelSheet)
    assert excelsheet.name == "blabla"
    assert excelsheet.nr_rows == 36
    assert excelsheet.sheet_type == ExcelSheetTypeChoices.output_check
    assert equal_dataframes(expected_df=expected_df_1, test_df=excelsheet.df)


def test_check_idmap_sections_2(patched_path_constants_2):
    meetpunt_config = MptConfigChecker()
    excelsheet = meetpunt_config.check_idmap_sections(sheet_name="blaat")
    assert isinstance(excelsheet, ExcelSheet)
    assert excelsheet.name == "blaat"
    assert excelsheet.nr_rows == 34
    assert excelsheet.sheet_type == ExcelSheetTypeChoices.output_check
    assert equal_dataframes(expected_df=expected_df_2, test_df=excelsheet.df)
