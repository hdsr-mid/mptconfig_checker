from mptconfig.checker import MptConfigChecker
from mptconfig.excel import ExcelSheet
from mptconfig.excel import ExcelSheetTypeChoices
from mptconfig.tests.fixtures import patched_path_constants_1
from mptconfig.tests.fixtures import patched_path_constants_2
from mptconfig.utils import equal_dataframes

import pandas as pd  # noqa pandas comes with geopandas


# silence flake8 errors
_patched_path_constants_1 = patched_path_constants_1
_patched_path_constants_2 = patched_path_constants_2

expected_df_1 = pd.DataFrame(
    {
        "internalLocation": {
            0: "KW107710",
            1: "KW100930",
            2: "KW101910",
            3: "KW100414",
            4: "KW100612",
            5: "KW100915",
            6: "KW100931",
            7: "KW101013",
            8: "KW101316",
            9: "KW101413",
            10: "KW101522",
            11: "KW101911",
            12: "KW102015",
            13: "KW102512",
            14: "KW102712",
            15: "KW102812",
            16: "KW102912",
            17: "KW103012",
            18: "KW103312",
            19: "KW103612",
            20: "KW103812",
            21: "KW104522",
            22: "KW104712",
            23: "KW104814",
            24: "KW105512",
            25: "KW106612",
            26: "KW107512",
            27: "KW107711",
            28: "KW107712",
            29: "KW108622",
            30: "KW109012",
            31: "KW109113",
            32: "KW109212",
            33: "KW109912",
            34: "KW110112",
            35: "KW110212",
            36: "KW210316",
            37: "KW210512",
            38: "KW212616",
            39: "KW213514",
            40: "KW215412",
            41: "KW216215",
            42: "KW216225",
            43: "KW217512",
            44: "KW322413",
            45: "KW322514",
            46: "KW323912",
            47: "KW435415",
            48: "KW436012",
            49: "KW439416",
            50: "KW439512",
            51: "PS2187",
            52: "PS2295",
            53: "PS2299",
            54: "PS2300",
            55: "PS2301",
            56: "PS2302",
            57: "PS2303",
            58: "PS2304",
            59: "PS2305",
            60: "PS2306",
            61: "PS2308",
            62: "PS2314",
            63: "PS2315",
            64: "PS2316",
            65: "PS2317",
            66: "PS2318",
            67: "PS2319",
            68: "PS2320",
            69: "PS2321",
            70: "PS2322",
            71: "PS2323",
            72: "PS2324",
            73: "PS2325",
            74: "PS2326",
            75: "PS2327",
            76: "PS2328",
            77: "PS2329",
            78: "PS2331",
            79: "PS2332",
            80: "PS2333",
            81: "PS2335",
            82: "PS2336",
            83: "PS2337",
            84: "PS2338",
            85: "PS2339",
            86: "PS2340",
            87: "PS2341",
            88: "PS2349",
            89: "PS2350",
            90: "PS2351",
            91: "PS2353",
            92: "PS2355",
            93: "PS2356",
            94: "PS2357",
            95: "PS2358",
            96: "PS2359",
            97: "PS2360",
            98: "PS2361",
            99: "PS2363",
        },
        "error_type": {
            0: "conversion",
            1: "unmeasured loc?",
            2: "unmeasured loc?",
            3: "conversion",
            4: "conversion",
            5: "conversion",
            6: "conversion",
            7: "conversion",
            8: "conversion",
            9: "conversion",
            10: "conversion",
            11: "conversion",
            12: "conversion",
            13: "conversion",
            14: "conversion",
            15: "conversion",
            16: "conversion",
            17: "conversion",
            18: "conversion",
            19: "conversion",
            20: "conversion",
            21: "conversion",
            22: "conversion",
            23: "conversion",
            24: "conversion",
            25: "conversion",
            26: "conversion",
            27: "conversion",
            28: "conversion",
            29: "conversion",
            30: "conversion",
            31: "conversion",
            32: "conversion",
            33: "conversion",
            34: "conversion",
            35: "conversion",
            36: "conversion",
            37: "conversion",
            38: "conversion",
            39: "conversion",
            40: "conversion",
            41: "conversion",
            42: "conversion",
            43: "conversion",
            44: "conversion",
            45: "conversion",
            46: "conversion",
            47: "conversion",
            48: "conversion",
            49: "conversion",
            50: "conversion",
            51: "conversion",
            52: "conversion",
            53: "conversion",
            54: "conversion",
            55: "conversion",
            56: "conversion",
            57: "conversion",
            58: "conversion",
            59: "conversion",
            60: "conversion",
            61: "conversion",
            62: "conversion",
            63: "conversion",
            64: "conversion",
            65: "conversion",
            66: "conversion",
            67: "conversion",
            68: "conversion",
            69: "conversion",
            70: "conversion",
            71: "conversion",
            72: "conversion",
            73: "conversion",
            74: "conversion",
            75: "conversion",
            76: "conversion",
            77: "conversion",
            78: "conversion",
            79: "conversion",
            80: "conversion",
            81: "conversion",
            82: "conversion",
            83: "conversion",
            84: "conversion",
            85: "conversion",
            86: "conversion",
            87: "conversion",
            88: "conversion",
            89: "conversion",
            90: "conversion",
            91: "conversion",
            92: "conversion",
            93: "conversion",
            94: "conversion",
            95: "conversion",
            96: "conversion",
            97: "conversion",
            98: "conversion",
            99: "conversion",
        },
        "error": {
            0: "start=19000101, end=32101230",
            1: "start=19000101, end=21000101",
            2: "start=19000101, end=21000101",
            3: "start=19000101, end=32101230",
            4: "start=19000101, end=32101230",
            5: "start=19000101, end=32101230",
            6: "start=19000101, end=32101230",
            7: "start=19000101, end=32101230",
            8: "start=19000101, end=32101230",
            9: "start=19000101, end=32101230",
            10: "start=19000101, end=32101230",
            11: "start=19000101, end=32101230",
            12: "start=19000101, end=32101230",
            13: "start=19000101, end=32101230",
            14: "start=19000101, end=32101230",
            15: "start=19000101, end=32101230",
            16: "start=19000101, end=32101230",
            17: "start=19000101, end=32101230",
            18: "start=19000101, end=32101230",
            19: "start=19000101, end=32101230",
            20: "start=19000101, end=32101230",
            21: "start=19000101, end=32101230",
            22: "start=19000101, end=32101230",
            23: "start=19000101, end=32101230",
            24: "start=19000101, end=32101230",
            25: "start=19000101, end=32101230",
            26: "start=19000101, end=32101230",
            27: "start=19000101, end=32101230",
            28: "start=19000101, end=32101230",
            29: "start=19000101, end=32101230",
            30: "start=19000101, end=32101230",
            31: "start=19000101, end=32101230",
            32: "start=19000101, end=32101230",
            33: "start=19000101, end=32101230",
            34: "start=19000101, end=32101230",
            35: "start=19000101, end=32101230",
            36: "start=19000101, end=32101230",
            37: "start=19000101, end=32101230",
            38: "start=19000101, end=32101230",
            39: "start=19000101, end=32101230",
            40: "start=19000101, end=32101230",
            41: "start=19000101, end=32101230",
            42: "start=19000101, end=32101230",
            43: "start=19000101, end=32101230",
            44: "start=19000101, end=32101230",
            45: "start=19000101, end=32101230",
            46: "start=19000101, end=32101230",
            47: "start=19000101, end=32101230",
            48: "start=19000101, end=32101230",
            49: "start=19000101, end=32101230",
            50: "start=19000101, end=32101230",
            51: "start=, end=",
            52: "start=, end=",
            53: "start=, end=",
            54: "start=, end=",
            55: "start=, end=",
            56: "start=, end=",
            57: "start=, end=",
            58: "start=, end=",
            59: "start=, end=",
            60: "start=, end=",
            61: "start=, end=",
            62: "start=, end=",
            63: "start=, end=",
            64: "start=, end=",
            65: "start=, end=",
            66: "start=, end=",
            67: "start=, end=",
            68: "start=, end=",
            69: "start=, end=",
            70: "start=, end=",
            71: "start=, end=",
            72: "start=, end=",
            73: "start=, end=",
            74: "start=, end=",
            75: "start=, end=",
            76: "start=, end=",
            77: "start=, end=",
            78: "start=, end=",
            79: "start=, end=",
            80: "start=, end=",
            81: "start=, end=",
            82: "start=, end=",
            83: "start=, end=",
            84: "start=, end=",
            85: "start=, end=",
            86: "start=, end=",
            87: "start=, end=",
            88: "start=, end=",
            89: "start=, end=",
            90: "start=, end=",
            91: "start=, end=",
            92: "start=, end=",
            93: "start=, end=",
            94: "start=, end=",
            95: "start=, end=",
            96: "start=, end=",
            97: "start=, end=",
            98: "start=, end=",
            99: "start=, end=",
        },
    }
)

expected_df_2 = pd.DataFrame(
    {
        "internalLocation": {
            0: "KW107710",
            1: "KW100930",
            2: "KW101910",
            3: "KW100414",
            4: "KW100612",
            5: "KW100915",
            6: "KW100931",
            7: "KW101013",
            8: "KW101316",
            9: "KW101413",
            10: "KW101522",
            11: "KW101911",
            12: "KW102015",
            13: "KW102512",
            14: "KW102712",
            15: "KW102812",
            16: "KW102912",
            17: "KW103012",
            18: "KW103312",
            19: "KW103612",
            20: "KW103812",
            21: "KW104522",
            22: "KW104712",
            23: "KW104814",
            24: "KW105512",
            25: "KW106612",
            26: "KW107512",
            27: "KW107711",
            28: "KW107712",
            29: "KW108622",
            30: "KW109012",
            31: "KW109113",
            32: "KW109212",
            33: "KW109912",
            34: "KW110112",
            35: "KW110212",
            36: "KW210316",
            37: "KW210512",
            38: "KW212616",
            39: "KW213514",
            40: "KW215412",
            41: "KW216215",
            42: "KW216225",
            43: "KW217512",
            44: "KW322413",
            45: "KW322514",
            46: "KW323912",
            47: "KW435415",
            48: "KW436012",
            49: "KW439416",
            50: "KW439512",
            51: "KW440612",
            52: "PS2187",
            53: "PS2295",
            54: "PS2299",
            55: "PS2300",
            56: "PS2301",
            57: "PS2302",
            58: "PS2303",
            59: "PS2304",
            60: "PS2305",
            61: "PS2306",
            62: "PS2308",
            63: "PS2314",
            64: "PS2315",
            65: "PS2316",
            66: "PS2317",
            67: "PS2318",
            68: "PS2319",
            69: "PS2320",
            70: "PS2321",
            71: "PS2322",
            72: "PS2323",
            73: "PS2324",
            74: "PS2325",
            75: "PS2326",
            76: "PS2327",
            77: "PS2328",
            78: "PS2329",
            79: "PS2330",
            80: "PS2331",
            81: "PS2332",
            82: "PS2333",
            83: "PS2335",
            84: "PS2336",
            85: "PS2337",
            86: "PS2338",
            87: "PS2339",
            88: "PS2340",
            89: "PS2341",
            90: "PS2349",
            91: "PS2350",
            92: "PS2351",
            93: "PS2353",
            94: "PS2355",
            95: "PS2356",
            96: "PS2357",
            97: "PS2358",
            98: "PS2359",
            99: "PS2360",
            100: "PS2361",
            101: "PS2363",
            102: "PS2366",
            103: "PS2365",
        },
        "error_type": {
            0: "conversion",
            1: "unmeasured loc?",
            2: "unmeasured loc?",
            3: "conversion",
            4: "conversion",
            5: "conversion",
            6: "conversion",
            7: "conversion",
            8: "conversion",
            9: "conversion",
            10: "conversion",
            11: "conversion",
            12: "conversion",
            13: "conversion",
            14: "conversion",
            15: "conversion",
            16: "conversion",
            17: "conversion",
            18: "conversion",
            19: "conversion",
            20: "conversion",
            21: "conversion",
            22: "conversion",
            23: "conversion",
            24: "conversion",
            25: "conversion",
            26: "conversion",
            27: "conversion",
            28: "conversion",
            29: "conversion",
            30: "conversion",
            31: "conversion",
            32: "conversion",
            33: "conversion",
            34: "conversion",
            35: "conversion",
            36: "conversion",
            37: "conversion",
            38: "conversion",
            39: "conversion",
            40: "conversion",
            41: "conversion",
            42: "conversion",
            43: "conversion",
            44: "conversion",
            45: "conversion",
            46: "conversion",
            47: "conversion",
            48: "conversion",
            49: "conversion",
            50: "conversion",
            51: "conversion",
            52: "conversion",
            53: "conversion",
            54: "conversion",
            55: "conversion",
            56: "conversion",
            57: "conversion",
            58: "conversion",
            59: "conversion",
            60: "conversion",
            61: "conversion",
            62: "conversion",
            63: "conversion",
            64: "conversion",
            65: "conversion",
            66: "conversion",
            67: "conversion",
            68: "conversion",
            69: "conversion",
            70: "conversion",
            71: "conversion",
            72: "conversion",
            73: "conversion",
            74: "conversion",
            75: "conversion",
            76: "conversion",
            77: "conversion",
            78: "conversion",
            79: "conversion",
            80: "conversion",
            81: "conversion",
            82: "conversion",
            83: "conversion",
            84: "conversion",
            85: "conversion",
            86: "conversion",
            87: "conversion",
            88: "conversion",
            89: "conversion",
            90: "conversion",
            91: "conversion",
            92: "conversion",
            93: "conversion",
            94: "conversion",
            95: "conversion",
            96: "conversion",
            97: "conversion",
            98: "conversion",
            99: "conversion",
            100: "conversion",
            101: "conversion",
            102: "conversion",
            103: "conversion",
        },
        "error": {
            0: "start=19000101, end=32101230",
            1: "start=19000101, end=21000101",
            2: "start=19000101, end=21000101",
            3: "start=19000101, end=32101230",
            4: "start=19000101, end=32101230",
            5: "start=19000101, end=32101230",
            6: "start=19000101, end=32101230",
            7: "start=19000101, end=32101230",
            8: "start=19000101, end=32101230",
            9: "start=19000101, end=32101230",
            10: "start=19000101, end=32101230",
            11: "start=19000101, end=32101230",
            12: "start=19000101, end=32101230",
            13: "start=19000101, end=32101230",
            14: "start=19000101, end=32101230",
            15: "start=19000101, end=32101230",
            16: "start=19000101, end=32101230",
            17: "start=19000101, end=32101230",
            18: "start=19000101, end=32101230",
            19: "start=19000101, end=32101230",
            20: "start=19000101, end=32101230",
            21: "start=19000101, end=32101230",
            22: "start=19000101, end=32101230",
            23: "start=19000101, end=32101230",
            24: "start=19000101, end=32101230",
            25: "start=19000101, end=32101230",
            26: "start=19000101, end=32101230",
            27: "start=19000101, end=32101230",
            28: "start=19000101, end=32101230",
            29: "start=19000101, end=32101230",
            30: "start=19000101, end=32101230",
            31: "start=19000101, end=32101230",
            32: "start=19000101, end=32101230",
            33: "start=19000101, end=32101230",
            34: "start=19000101, end=32101230",
            35: "start=19000101, end=32101230",
            36: "start=19000101, end=32101230",
            37: "start=19000101, end=32101230",
            38: "start=19000101, end=32101230",
            39: "start=19000101, end=32101230",
            40: "start=19000101, end=32101230",
            41: "start=19000101, end=32101230",
            42: "start=19000101, end=32101230",
            43: "start=19000101, end=32101230",
            44: "start=19000101, end=32101230",
            45: "start=19000101, end=32101230",
            46: "start=19000101, end=32101230",
            47: "start=19000101, end=32101230",
            48: "start=19000101, end=32101230",
            49: "start=19000101, end=32101230",
            50: "start=19000101, end=32101230",
            51: "start=19000101, end=32101230",
            52: "start=, end=",
            53: "start=, end=",
            54: "start=, end=",
            55: "start=, end=",
            56: "start=, end=",
            57: "start=, end=",
            58: "start=, end=",
            59: "start=, end=",
            60: "start=, end=",
            61: "start=, end=",
            62: "start=, end=",
            63: "start=, end=",
            64: "start=, end=",
            65: "start=, end=",
            66: "start=, end=",
            67: "start=, end=",
            68: "start=, end=",
            69: "start=, end=",
            70: "start=, end=",
            71: "start=, end=",
            72: "start=, end=",
            73: "start=, end=",
            74: "start=, end=",
            75: "start=, end=",
            76: "start=, end=",
            77: "start=, end=",
            78: "start=, end=",
            79: "start=, end=",
            80: "start=, end=",
            81: "start=, end=",
            82: "start=, end=",
            83: "start=, end=",
            84: "start=, end=",
            85: "start=, end=",
            86: "start=, end=",
            87: "start=, end=",
            88: "start=, end=",
            89: "start=, end=",
            90: "start=, end=",
            91: "start=, end=",
            92: "start=, end=",
            93: "start=, end=",
            94: "start=, end=",
            95: "start=, end=",
            96: "start=, end=",
            97: "start=, end=",
            98: "start=, end=",
            99: "start=, end=",
            100: "start=, end=",
            101: "start=, end=",
            102: "start=, end=",
            103: "start=, end=",
        },
    }
)


def test_check_dates_loc_sets_1(patched_path_constants_1):
    """integration test with patched paths 1"""
    meetpunt_config = MptConfigChecker()
    excelsheet = meetpunt_config.check_dates_loc_sets(sheet_name="blabla")
    assert isinstance(excelsheet, ExcelSheet)
    assert excelsheet.name == "blabla"
    assert excelsheet.sheet_type == ExcelSheetTypeChoices.output_check
    assert excelsheet.nr_rows == 100
    assert equal_dataframes(expected_df=expected_df_1, test_df=excelsheet.df)


def test_check_dates_loc_sets_2(patched_path_constants_2):
    """integration test with patched paths 2"""
    meetpunt_config = MptConfigChecker()
    excelsheet = meetpunt_config.check_dates_loc_sets(sheet_name="blabla")
    assert isinstance(excelsheet, ExcelSheet)
    assert excelsheet.name == "blabla"
    assert excelsheet.sheet_type == ExcelSheetTypeChoices.output_check
    assert excelsheet.nr_rows == 104
    assert equal_dataframes(expected_df=expected_df_2, test_df=excelsheet.df)
